#include<iostream>
#include<string>
#include<iomanip>
#include <cstdlib>
#include<fstream>
#include<ctime>
using namespace std;

void welcome();
int login();
int reg();
void food();
void drink();
void side();
double membershiptopup();
int membershippoint();




int main() {
	int ans, status;
	int foodnum, drinknum, sidesnum, quantity, location;
	double price_ala, price_com, total_ala = 0, total_com = 0, amount_ala, amount_com;
	char type, ans1;
	double qty1 = 0, qty2 = 0, qty3 = 0, qty4 = 0, qty5 = 0, qty6 = 0, qty7 = 0, qty8 = 0, qty9 = 0, qty10 = 0, qty11 = 0, qty12 = 0, qty13 = 0, qty14 = 0, qty15 = 0;
	string foodName = "";
	do {
		welcome();
		do {
			cout << "Selection: ";
			cin >> ans;
			if (ans != 1 && ans != 2 && ans != 0)
				cout << "Invalid input! Please enter 0, 1 or 2!" << endl;
		} while (ans != 1 && ans != 2 && ans != 0);

		bool exitloop = false;
		if (ans == 1 || ans == 2) {
			if (ans == 2)
			{
				reg();
			}
			status = login();
			if (status == 1) {
				cout << "\n1. Dine in \n2. Take away \nEnter number for dining location: ";
				cin >> location;
				food();
				do {
					cout << "\nEnter number from menu to order: ";
					cin >> foodnum;
					cout << "Enter (A/a) for ala carte, (C/c) for combo: ";
					cin >> type;
					cout << "Enter quantity to purchase: ";
					cin >> quantity;

					switch (foodnum) {
					case 1: qty1 += quantity;
						int amt1 = int(qty1);
						price_ala = 15.9, price_com = 22.9;
						foodName = foodName + "Crunchwrap supreme (chicken) x" + to_string(amt1) + "\n";
						break;
					case 2: qty2 += quantity;
						int amt2 = int(qty2);
						price_ala = 15.9, price_com = 22.9;
						foodName = foodName + "Crunchwrap supreme (chicken) x" + to_string(amt2) + "\n";
						break;
					case 3: qty3 += quantity;
						price_ala = 15.9, price_com = 22.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 7: qty7 += quantity;
						price_ala = 15.9, price_com = 22.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 9: qty9 += quantity;
						price_ala = 15.9, price_com = 22.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 10: qty10 += quantity;
						price_ala = 15.9, price_com = 22.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 14: price_ala = 15.9, price_com = 22.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						qty14 += quantity;
						break;
					case 4:  qty4 += quantity;
						price_ala = 14.9, price_com = 21.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 5: qty5 += quantity;
						price_ala = 14.9, price_com = 21.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 12: price_ala = 14.9, price_com = 21.9;
						qty12 += quantity;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 6: price_ala = 9.9, price_com = 15.9, qty6 += quantity;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 8: price_ala = 14.9, price_com = 22.9, qty8 += quantity;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 11: price_ala = 16.9, price_com = 23.9, qty11 += quantity;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 13: qty13 += quantity;
						price_ala = 13.9, price_com = 19.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						break;
					case 15: price_ala = 13.9, price_com = 19.9;
						foodName = foodName + "Crunchwrap supreme (chicken)";
						qty15 += quantity;
						break;
					default: cout << "Please insert a valid number\n";
						break;
					}

					type = toupper(type);
					if (type == 'A') {
						amount_ala = price_ala * quantity;
						total_ala += amount_ala;
					}
					else if (type == 'C')
					{
						amount_com = price_com * quantity;
						total_com += amount_com;
						drink();
						cout << "Select a drink for combo: ";
						cin >> drinknum;
						side();
						cout << "Select a sides for combo: ";
						cin >> sidesnum;
					}
					cout << "Do you want to continue? Y to continue: ";
					cin >> ans1;
					ans = toupper(ans1);
				} while (ans1 == 'Y');
				cout << foodName << endl;
				double total = total_ala + total_com;
				double sub_total;
				if (location == 1) {
					sub_total = total * 1.1;
					cout << "\nTotal = RM" << total << endl;
					cout << "Subtotal (dine in) = RM" << sub_total;
				}
				else if (location == 2) {
					sub_total = total + 2;
					cout << "\nTotal = RM" << total << endl;
					cout << "Subtotal (take away) = RM" << sub_total;
				}
			}

		}
		else if (ans == 0)
		{
			cout << "Thank you & Have a nice day";
		}
	} while (status == 2);
}


void welcome() {
	cout << endl << endl;
	cout << "          /===========================================\\*\\ \n";
	cout << "         /    ========    //\\\\     ||=====  ||======   \\**\\ \n";
	cout << "        /        ||      //  \\\\    ||       ||    ||    \\**\\ \n";
	cout << "       /         ||     //====\\\\   ||       ||    ||     \\**\\ \n";
	cout << "      /          ||    //      \\\\  ||=====  ======||      \\**\\ \n";
	cout << "     |                                                    |***| \n";
	cout << "     |       ========	========   ||\\\\	 //||  ||----	  |** | \n";
	cout << "     |          ||         ||      || \\\\// ||  ||____     |** | \n";
	cout << "     |          ||         ||      ||  \\/  ||  ||         |***| \n";
	cout << "     |          ||      ========   ||      ||  ||____     |** | \n";
	cout << "     \\====================================================\\===/ \n";
	cout << "\n";
	cout << "Welcome to Taco Time!" << endl;
	cout << "\nDo you have an account with Taco Time?" << endl;
	cout << "1. Yes" << endl;
	cout << "2. No" << endl;
	cout << "0. Exit" << endl;
}

int login() {
	string name, card1;
	ifstream inData;
	int status;
	inData.open("userdata.dat");
	if (!inData)
	{
		cout << "Error opening data file!\n";
		return 1;
	}
	cout << endl << endl;
	cout << "||          =====     =======   ======   ||\\\\    ||" << endl;
	cout << "||        //     \\\\  ||           ||     || \\\\   ||" << endl;
	cout << "||        ||     ||  ||  ====     ||     ||  \\\\  ||" << endl;
	cout << "||        \\\\     //  ||    ||     ||     ||   \\\\ ||" << endl;
	cout << " =======    =====     =======   ======   ||    \\\\||" << endl;
	cout << setw(51) << setfill('-') << "" << endl;
	cout << setw(51) << setfill('-') << "" << endl;
	cout << "\n";
	cout << "Name:";
	cin.ignore();
	getline(cin, name);

	bool userFound = false;
	bool cardFound = false;
	string line;
	while (getline(inData, line)) {
		if (line.find(name) != string::npos)
		{
			userFound = true;
			break;
		}
	}
	if (userFound)
	{
		cout << "Membership card number: ";
		getline(cin, card1);
		while (getline(inData, line)) {
			if (line.find(card1) != string::npos)
			{
				cardFound = true;
				break;
			}
		}
		if (cardFound) {
			cout << "Login Success!\n";
			status = 1;
		}
		else
		{
			cout << "Invalid Member Card Number! \n\n";
			cout << "/////////////////////////////////////////////////////////////////////";
			status = 2;
		}
	}
	else
	{
		cout << "Invalid user! \n";
	}
	inData.close();
	return status;
}

int reg() {
	ifstream inData;
	ofstream readData;
	inData.open("userdata.dat");
	readData.open("userdata.dat");
	if (!readData)
	{
		cout << "Error opening data file!\n";
		return 1;
	}
	else {
		srand(time(0));
		int i = 0;
		string name, contact;

		cout << endl << endl;
		cout << " ======     =======    =======    ======    ======   ======   ======   ======" << endl;
		cout << "||    ||   ||         ||            ||     ||          ||    ||       ||    ||" << endl;
		cout << "||=====    ||======   || ====       ||      ======     ||    ||=====  ||=====" << endl;
		cout << "||   \\\\    ||         ||     ||     ||           ||    ||    ||       ||   \\\\" << endl;
		cout << "||    \\\\    =======    =======    ======    ======     ||     ======  ||    \\\\" << endl;
		cout << setw(81) << setfill('-') << "" << endl;
		cout << setw(81) << setfill('-') << "" << endl;
		cout << "\n";
		cout << "Name: ";
		cin.ignore();
		getline(cin, name);
		readData << name << endl;
		cout << "Contact number: ";
		getline(cin, contact);
		cout << "Membership card number: ";
		int rannum = rand() % 999999;
		string ranstring = to_string(rannum);
		while (ranstring.length() < 6) {
			ranstring = "0" + ranstring;
		}
		string memberid = "ABC" + ranstring;
		cout << memberid;
		readData << memberid << endl;
		int memberpoint = 0;
		readData << memberpoint << endl;
		double topupvalue = 0;
		readData << topupvalue << endl;
		cout << endl << endl;
	}
	inData.close();
	readData.close();
	return 0;
}

void food() {
	cout << left << setw(44) << "Menu:" << right << setw(12) << "Ala carte" << setw(12) << "Combo" << endl;
	cout << setw(68) << setfill('=') << '=' << endl << setfill(' ');
	cout << left << setw(44) << " 1. Crunchwrap supreme (chicken)" << right << setw(12) << "RM15.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << " 2. 2 taco supreme (beef)" << right << setw(12) << "RM15.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << " 3. 2 kickin chicken tacos" << right << setw(12) << "RM15.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << " 4. Grilled stuffed burritos (chicken)" << right << setw(12) << "RM14.90" << setw(12) << "RM21.90" << endl;
	cout << left << setw(44) << " 5. Chickstar" << right << setw(12) << "RM14.90" << setw(12) << "RM21.90" << endl;
	cout << left << setw(44) << " 6. Double cheese breakfast tacos" << right << setw(12) << "RM 9.90" << setw(12) << "RM15.90" << endl;
	cout << left << setw(44) << " 7. Toasted wrap" << right << setw(12) << "RM15.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << " 8. Ranch crispy chicken" << right << setw(12) << "RM14.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << " 9. Chipotle taco (beef)" << right << setw(12) << "RM15.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << "10. Crispy chicken & guac burrito" << right << setw(12) << "RM15.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << "11. Guacamole burrito (beef)" << right << setw(12) << "RM16.90" << setw(12) << "RM23.90" << endl;
	cout << left << setw(44) << "12. Chicken quesadilla" << right << setw(12) << "RM14.90" << setw(12) << "RM21.90" << endl;
	cout << left << setw(44) << "13. Bean & cheese burrito(vegan)" << right << setw(12) << "RM13.90" << setw(12) << "RM19.90" << endl;
	cout << left << setw(44) << "14. 8 layer veggie burrito(vegan)" << right << setw(12) << "RM15.90" << setw(12) << "RM22.90" << endl;
	cout << left << setw(44) << "15. Cheddar quesadilla (vegan)" << right << setw(12) << "RM13.90" << setw(12) << "RM19.90" << endl;
}

void drink() {
	cout << "Drinks:\n";
	cout << " 1. Ice lemon tea\n";
	cout << " 2. Coke\n";
	cout << " 3. Pepsi\n";
	cout << " 4. Minute maid orange\n";
	cout << " 5. Sprite\n";
	cout << " 6. Fanta grape\n";
	cout << " 7. A&W\n";
	cout << " 8. Mountain dew\n";
}

void side() {
	cout << "Sides:";
	cout << " 1. Nacho's chip\n";
	cout << " 2. Fries\n";
	cout << " 3. Nugget\n";
	cout << " 4. Cinnamon churros\n";
	cout << " 5. Chessy wedges\n";
	cout << " 7. Coleslaw\n";
}

double membershiptopup() {
	string memnum;
	double  topupvalue;
	int choice, selection, memberpoint;
	ifstream inData;

	inData.open("userdata.dat");


	if (!inData) {
		cout << "Error opening data file!\n";
		return 1;
	}

	inData >> memberpoint;
	while (!inData.eof()) {
		cout << "Current memberpoint: " << memberpoint << endl;
	}

	inData >> topupvalue;
	while (!inData.eof()) {
		cout << "Current balance: " << topupvalue << endl;
	}

	cout << "Do You Wish To Top Up? [1]Yes [2]No " << endl;
	cin >> choice;

	switch (choice)
	{
	case 1: cout << "Please select the top up amount:";
		cout << "[1] RM 5.00 \n";
		cout << "[2] RM 10.00 \n";
		cout << "[3] RM 30.00 \n";
		cout << "[4] RM 50.00 \n";
		cout << "Selection: ";
		cin >> selection;
		switch (selection) {
		case 1: topupvalue += 5.0;
		case 2: topupvalue += 10.0;
		case 3: topupvalue += 30.0;
		case 4: topupvalue += 50.0;
		default: cout << "Error input!\n";
		}
		break;
	case 2:membershippoint();
	default:
		cout << "Error Input!";
		break;
	}
	inData.close();
	return 0;
}

int membershippoint() {
	int memberpoint;
	ifstream inData;
	ofstream outData;
	inData.open("userdata.dat");
	outData.open("userdata.dat");

	if (!outData) {
		cout << "Error opening data file!\n";
		return 1;
	}

	if (!inData) {
		cout << "Error opening data file!\n";
		return 1;
	}

	inData >> memberpoint;
	while (!inData.eof()) {
		inData >> memberpoint;
	}
	//memberpoint = (int)grandtotal;
	//outData << memberpoint <<endl;
	inData.close();
	outData.close();
	return 0;
}